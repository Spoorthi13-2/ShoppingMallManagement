<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shopping Mall Management</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    <style>
        #overtop {
            background-color: darkgoldenrod;
            height: 12px;
        }
    </style>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script>
            $(document).ready(function () {
                $("#mydiv").hide();
                var count = 1;
                $("input[name='OccupancyStatus']").change(function () {

                    $("#mydiv").toggle();
                    count++;
                    if (count % 2 != 0) {
                        $("#inpval1").val("NA");
                        $("#inpval2").val() = "NA";
                        $("#inpval3").val() = 0;
                    }
                });
                $("#b").on("click", function () {
                    if ($("#sn").val() == '' || $("#sa").val() == '' || $("#amt").val() == '' || $("#oc").val() == '' || $("#st").val() == '' || $("#ss").val() == '' || $("#sl").val() == '') {
                        alert('Please update the highlighted mandatory field(s)');
                    }
                });
            });
    </script>
</head>
<body>
    @if (Session["userid"] != null)
    {
        @Html.Partial("adminnav")
        <div class="container body-content">

            @model ShoppingProjectA.Models.StoreDetails

            @Scripts.Render("~/bundles/jquery")
            @Scripts.Render("~/bundles/jqueryval")


            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>StoreDetails</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.StoreNo)

                    <div class="form-group">
                        @Html.LabelFor(model => model.StoreSize, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.StoreSize, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.StoreSize, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.StoreLocation, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.StoreLocation, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.StoreLocation, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Area, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Area, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Area, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.OccupancyStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.RadioButton("OccupancyStatus", "Occupied")&nbsp;Occupied
                            @Html.RadioButton("OccupancyStatus", "Vacant", true)&nbsp;Vacant
                            @Html.ValidationMessageFor(model => model.OccupancyStatus, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div id="mydiv" style="display:none;">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ShopName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ShopName, new { htmlAttributes = new { @id = "inpval1", value = "NA", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ShopName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.BusinessCategory, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.BusinessCategory, (IEnumerable<SelectListItem>)ViewData["BusinessCategories"], "Select Category", new { @id = "inpval2", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.BusinessCategory, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.AgreementTenure, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.AgreementTenure, new { htmlAttributes = new { @id = "inpval3", value = 0, @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.AgreementTenure, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input id="b" type="submit" value="Update" class="btn btn-success" />
                        </div>
                    </div>
                </div>
            }

            @Scripts.Render("~/bundles/jquery")
            @Scripts.Render("~/bundles/bootstrap")
        </div>
    }
    else
    {
        @Html.Partial("sessionexpired");
    }
</body>
</html>
