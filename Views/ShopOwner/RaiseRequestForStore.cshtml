<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shopping Mall Management</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    <style>
        #overtop {
            background-color: darkgoldenrod;
            height: 12px;
        }
    </style>
</head>
<body>
    @if (Session["userid"] != null)
    {
        @Html.Partial("shopownernav")

        <div class="container body-content">


            @model ShoppingProjectA.Models.RequestTable

            @Scripts.Render("~/bundles/jquery")
            @Scripts.Render("~/bundles/jqueryval")


            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h2 style="color:navy">Request For Store</h2>
                    <div class="reqform">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">

                            @Html.LabelFor(model => model.StoreNo, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.StoreNo, new { htmlAttributes = new { @Value = ViewBag.storeno, @readonly = true, @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.StoreNo, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.StoreLoc, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.StoreLoc, new { htmlAttributes = new { @Value = ViewBag.storeloc, @readonly = true, @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.StoreLoc, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @Value = ViewBag.type, @readonly = true, @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ShopOwnerName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ShopOwnerName, new { htmlAttributes = new { @Value = ViewBag.shopownername, @readonly = true, @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ShopOwnerName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ContactNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ContactNumber, new { htmlAttributes = new { @Value = ViewBag.contactnumber, @readonly = true, @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ContactNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.BusinessCategory, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.BusinessCategory, new { htmlAttributes = new { @Value = ViewBag.business, @readonly = true, @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.BusinessCategory, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.AgreementTenure, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.AgreementTenure, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.AgreementTenure, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Raise Request" class="btn btn-success" />
                            </div>
                        </div>
                    </div>
                </div>
            }

        </div>

        @Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/bootstrap")
    }
    else
    {
        @Html.Partial("sessionexpired");
    }
</body>
</html>